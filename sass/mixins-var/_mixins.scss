//------------------------------------------------------------------------------
// Main sprite

@mixin sprite($x, $y, $bg-color: transparent, $sprite: '../images/sprite.png') {
  background: $bg-color url($sprite) no-repeat $x $y;
}

//------------------------------------------------------------------------------
// Font resizing

@mixin font-size($sizeValue: 15) {
  font-size: ($sizeValue) + px;
  font-size: ($sizeValue / 16) + rem;
}

//------------------------------------------------------------------------------
// include_font

/**
 * Includes any font.
 *
 * The font must be placed in: ../font/NAME.[eot|woff|ttf|svg]
 *
 * @param (string) $name - font and folder name;
 * @param (string) $weight - font weight, subfolder and file name.
 *
 * @example:
 *
 * ../font/Arial/bold/bold.[eot|woff|ttf|svg]
 * @include include_font(Arial, bold);
 */
@mixin include_font($name, $weight) {
  $url: unquote('../fonts/' +  $name + '/' + $weight + '/' + $weight);

  @font-face {
    font-family: $name + $weight;
    src: url($url + '.eot');
    src: url($url + '.eot?#iefix') format('embedded-opentype'),
    url($url + '.woff') format('woff'),
    url($url + '.ttf') format('truetype'),
    url($url + '.svg#' + $name) format('svg');
    font-style: normal;
  }
}

//------------------------------------------------------------------------------
// Links
@mixin links($color: $link, $hover: $link-hover, $dec: false) {
  color: $color;

  @if $dec == true {
    text-decoration: underline;
    &:hover {
      color: $hover;
    }
  }
  @if $dec == false {
    text-decoration: none;
    &:hover {
      color: $hover;
    }
  }
}

//------------------------------------------------------------------------------
// Input fields

@mixin inputs($width: auto, $height: auto, $border: none, $color: black) {
  height: $height;
  width: $width;
  border: $border;
  background-color: #fff;
  padding: 0 5px;
  color: $color;
}

//------------------------------------------------------------------------------
// Submit Button

@mixin submit($width: auto, $height: auto, $border: none, $color: #fff) {
  width: $width;
  height: $height;
  line-height: $height;
  border: $border;
  color: $color;
  padding: 5px;
}

//------------------------------------------------------------------------------
// CSS3 Animation
%animate {
  @include transition-property(all);
  @include transition-timing-function(ease-in);
  @include transition-duration(.1s);
}

@mixin transition($duration: .2s, $ease: ease-out) {
  -webkit-transition: all $duration $ease;
  -moz-transition: all $duration $ease;
  -o-transition: all $duration $ease;
  transition: all $duration $ease;
}

@mixin transition-delay($duration: .2s) {
  -webkit-transition-delay: $duration;
  -moz-transition-delay: $duration;
  -o-transition-delay: $duration;
  transition-delay: $duration;
}

// animateion mixin
@mixin keyframe ($animation_name) {
  @-webkit-keyframes $animation_name {
    @content;
  }

  @-moz-keyframes $animation_name {
    @content;
  }

  @-o-keyframes $animation_name {
    @content;
  }

  @keyframes $animation_name {
    @content;
  }
}

/*
Example usage:
@include animation(10s, 5s, changecolour)
*/
@mixin animation ($delay, $duration, $animation) {
  -webkit-animation-delay: $delay;
  -webkit-animation-duration: $duration;
  -webkit-animation-name: $animation;
  -webkit-animation-iteration-count: infinite;
  -webkit-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

  -moz-animation-delay: $delay;
  -moz-animation-duration: $duration;
  -moz-animation-name: $animation;
  -moz-animation-iteration-count: infinite;
  -moz-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

  -o-animation-delay: $delay;
  -o-animation-duration: $duration;
  -o-animation-name: $animation;
  -o-animation-iteration-count: infinite;
  -o-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

  animation-delay: $delay;
  animation-duration: $duration;
  animation-name: $animation;
  animation-iteration-count: infinite;
  animation-fill-mode: forwards; /* this prevents the animation from restarting! */
}

//------------------------------------------------------------------------------
// Abstract classes
%border-bottom {
  border-bottom: 1px solid $gray;
}

%no-border {
  border: 0 none;
}

%no-padding {
  padding: 0;
}

%no-margin {
  margin: 0;
}

%centered {
  text-align: center;
}

//------------------------------------------------------------------------------
// Placeholder
@mixin placeholder($color) {
  .placeholder {
    color: $color;
  }
  &:-moz-placeholder {
    color: $color;
  }
  &::-webkit-input-placeholder {
    color: $color;
  }
}

// appearance for browsers
@mixin appearance($value: none) {
  -webkit-appearance: $value;
  -moz-appearance: $value;
  appearance: $value;
}

// Responsive video
%respondvideo {
  position: relative;
  padding-bottom: 56.25%; /* 16/9 ratio */
  height: 0 !important;
  overflow: hidden;
  display: block;

  iframe,
  object,
  embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

%vertical-alignment {
  position: absolute;
  left: 50%;
  top: 50%;
  @include translate(-50%, -50%);
}
